# graph/user.graphqls

type Account {
  accountId: ID!
  email: String!
  firstName: String!
  lastName: String!
  middleName: String
  username: String
  bio: String
  profilePictureURL: String
  bannerPictureURL: String
  dateOfBirth: String
  address: String
  phone: String
  age: Int!
  gender: String
  isFollowing: Boolean
  createdAt: String!
  updatedAt: String
}

input RegisterInput {
  email: String!
  password: String!
  firstName: String!
  lastName: String!
  middleName: String
  username: String
  address: String
  phone: String
  age: Int!
  gender: String
}

extend type Mutation {
  register(input: RegisterInput!): Account!

  "Allows the logged-in user to follow another user."
  followUser(userIdToFollow: ID!): Account! # Returns the account being followed

  "Allows the logged-in user to unfollow another user."
  unfollowUser(userIdToUnfollow: ID!): Account! # Returns the account being unfollowed
  
  "Updates the user's profile."
  updateProfile(
    username: String
    firstName: String
    lastName: String
    middleName: String
    bio: String
    profilePictureUrl: String
    bannerPictureUrl: String
    dateOfBirth: String
    address: String
    phone: String
  ): Account!
}

extend type Query {
  getAccount(accountId: ID!): Account!
  listAccounts: [Account!]!
}